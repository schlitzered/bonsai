hosts:
  bonsai.test:  127.0.0.1

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\.appveyor\\run_with_env.cmd"

  matrix:

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  # Install Active Directory and reboot the machine.
  - ps: .\\.appveyor\\InstallAD.ps1
  - ps: Start-Sleep -s 5
  - ps: Write-Output 'Finished installing Active Directory.'
  - ps: .\\.appveyor\\ConfigAD.ps1
  - "ldifde -i -v -f .\\tests\\testenv\\ldifs\\users.ldif"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "%PYTHON%\\python.exe -m pip install --disable-pip-version-check --user --upgrade pip"
  - "pip install pipenv"
  - "pipenv install --dev --system --skip-lock"
  - "pip list"

build_script:
  # Build the compiled extension
  - "%CMD_IN_ENV% python setup.py install"

before_test:
  - ps: "Start-Process python -ArgumentList .\\.travis\\delay.py -Verb runas"
  # Change hostname to the computer's FQDN.
  - ps: "(Get-Content .\\tests\\test.ini).replace('hostname = bonsai.test', 'hostname = appvyr-win.bonsai.test') | Set-Content '.\\tests\\test.ini'"

test_script:
  # Set install path for coverage.py.
  - for /f "tokens=*" %%i in ('python -c "import bonsai; print(bonsai.__file__[:-12])"') do set INSTALL_PATH="%%i"
  # Run the tests.
  - "%CMD_IN_ENV% python -m pytest -v --cov-config .coveragerc --cov-report= --cov=%INSTALL_PATH%"

after_test:
  # Change path of the Python source files in .coverage.
  - ps: $install_path = python -c "import bonsai; print(bonsai.__file__[:-12].replace('\\', '\\\\\\\\'))"; `
        $project_path = $env:APPVEYOR_BUILD_FOLDER.Replace('\', '\\') + "\\lib"; `
        (Get-Content .\\.coverage) -replace $install_path, $project_path | Set-Content '.\\.coverage'
  - codecov
  # If tests are successful, create binary packages for the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  # - "%CMD_IN_ENV% python setup.py bdist_msi"
  - "%CMD_IN_ENV% python setup.py bdist_wininst"
  - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

on_failure:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
